var $ = require('ep_etherpad-lite/static/js/rjquery').$;
var _ = require('ep_etherpad-lite/static/js/underscore');
var authorsColorsUtils = require('./authorsColorsUtils');
var colorUtils = require('ep_cursortrace/static/js/colors');

var api = require('./api');
var utils = require('./utils');

exports.aceAttribsToClasses = function(hook, context) {
  var key = context.key;
  var value = context.value;

  // black color is the same as not applying color
  if (key === utils.FONT_COLOR_ATTRIB_KEY && value !== utils.BLACK_COLOR) {
    return [utils.FONT_COLOR_ATTRIB_KEY + '-' + value];
  }
};

exports.aceInitialized = function(hook, context) {
  var editorInfo = context.editorInfo;
  var thisPlugin = utils.getPluginProps();
  thisPlugin.api = api.init();
  thisPlugin.authorsColors = authorsColorsUtils.init(context);
};

/*
 * The author's background color on TK is different from the one set by
 * the etherpad. We replace the etherpad color for the first time on
 * the module authorsColorsUtils, calling editorInfor.ace_setAuthorInfo.
 * But, when the user reloads the pad, the etherpad replaces his color with
 * the one generated by etherpad again. In order to keep using the TK colors,
 * we need this hook, which checks if the TK colors were already set,
 * and if so, forces the etherpad to use the TK background color.
 */
exports.aceSetAuthorStyle = function(hook, context) {
  var thisPlugin = utils.getPluginProps();
  var usersColors = thisPlugin.authorsColors.usersColors;

  if (Object.keys(usersColors).length) {
    var authorId = context.author;
    var authorSelector = context.authorSelector;
    var dynamicCSS = context.dynamicCSS;

    var authorStyle = dynamicCSS.selectorStyle(authorSelector);
    var bgcolor = colorUtils.getColorHash(usersColors[authorId], 0.3);

    authorStyle.backgroundColor = bgcolor;
  }

  return true;
}
